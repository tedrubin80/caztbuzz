name: Deploy CastBuzz to Railway

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛎️ Checkout repository
      uses: actions/checkout@v4
    
    - name: 🏗️ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: 📦 Install dependencies
      run: npm ci
    
    - name: 🧪 Run tests (if available)
      run: |
        if [ -f "package.json" ] && npm run test --if-present; then
          echo "Tests passed"
        else
          echo "No tests found or tests skipped"
        fi
      continue-on-error: true
    
    - name: 🚂 Install Railway CLI
      run: npm install -g @railway/cli
    
    - name: 🚀 Deploy to Railway
      run: railway up --service castbuzz-podcast
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    
    - name: ⚙️ Set Environment Variables (Optional)
      run: |
        if [ -n "${{ secrets.DB_HOST }}" ]; then
          railway variables set NODE_ENV=production
          railway variables set DB_HOST="${{ secrets.DB_HOST }}"
          railway variables set DB_USER="${{ secrets.DB_USER }}"
          railway variables set DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          railway variables set DB_NAME="${{ secrets.DB_NAME }}"
          railway variables set DB_PORT="${{ secrets.DB_PORT }}"
          railway variables set JWT_SECRET="${{ secrets.JWT_SECRET }}"
          railway variables set SESSION_SECRET="${{ secrets.SESSION_SECRET }}"
          
          # Optional variables
          if [ -n "${{ secrets.ADMIN_USERNAME }}" ]; then
            railway variables set ADMIN_USERNAME="${{ secrets.ADMIN_USERNAME }}"
          fi
          if [ -n "${{ secrets.ADMIN_PASSWORD }}" ]; then
            railway variables set ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}"
          fi
          if [ -n "${{ secrets.ENCRYPTION_KEY }}" ]; then
            railway variables set ENCRYPTION_KEY="${{ secrets.ENCRYPTION_KEY }}"
          fi
        else
          echo "⚠️ Database secrets not configured - skipping environment variable setup"
        fi
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    
    - name: 🏥 Health Check
      run: |
        echo "Waiting for deployment to be ready..."
        sleep 30
        
        # Get the deployment URL (you'll need to set this as a secret or get it from Railway CLI)
        DEPLOY_URL="${{ secrets.DEPLOY_URL }}"
        if [ -z "$DEPLOY_URL" ]; then
          echo "⚠️ DEPLOY_URL not set - skipping health check"
          exit 0
        fi
        
        # Try health check with retries
        for i in {1..5}; do
          echo "Health check attempt $i/5..."
          if curl -f -s "$DEPLOY_URL/api/health" > /dev/null; then
            echo "✅ Health check passed!"
            break
          else
            echo "❌ Health check failed, retrying in 10 seconds..."
            sleep 10
          fi
          
          if [ $i -eq 5 ]; then
            echo "💥 Health check failed after 5 attempts"
            exit 1
          fi
        done
      continue-on-error: true
    
    - name: ✅ Deployment Complete
      run: |
        echo "🎉 CastBuzz deployed successfully!"
        echo "🔗 Check your Railway dashboard for the live URL"
        echo "📊 Monitor logs: railway logs"
        echo "🏥 Health check: railway run curl /api/health"